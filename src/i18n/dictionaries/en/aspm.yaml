aspm:
  hero:
    title: "Never Build"
    titleHighlight: "Permissions"
    titleEnd: "Again"
    problems:
      - "Your applications ship with vulnerabilities."
      - "Static scanners miss 40% of critical flaws."
      - "Manual security reviews bottleneck releases."
    solution: "Plexicus ASPM fixes the broken application security lifecycle."
    buttons:
      getStarted: "Get Started"
      viewDemo: "View Demo"
    pipeline:
      stages:
        sourceCode:
          title: "Source Code"
          issues:
            - "Secrets"
            - "SAST Issues"
            - "PII Exposure"
        buildPipeline:
          title: "Build Pipeline"
          issues:
            - "Dependencies"
            - "IaC Misconfig"
            - "License Risks"
        production:
          title: "Production"
          issues:
            - "Runtime Vulns"
            - "API Exposure"
            - "Supply Chain"
      plexicus:
        title: "Plexicus ASPM"
        components:
          - "Codex Remedium AI"
          - "Plexalyzer Orchestrator"
          - "Unified Dashboard"
          - "Zero-Touch Compliance"

  technicalProblem:
    title: "Technical Problem:"
    titleHighlight: "Fragmented Security Tools"
    subtitle: "Traditional security approaches create more problems than they solve"
    before:
      title: "Before Plexicus"
      codeComment: "# Developer workflow"
      commands:
        - "$ git commit -m \"new feature\""
        - "$ sonarqube-scan --wait-4-hours"
        - "$ snyk test --json > snyk.json"
        - "$ checkov -f main.tf --output sarif"
        - "$ trivy image myapp:latest"
        - "$ bandit -r . --format json"
      resultComment: "# Review 6 different reports, 400+ findings, 80% false positives"
      resultLabel: "The Result:"
      results:
        - "6 different reports to review"
        - "400+ findings to analyze"
        - "Hours spent on false positives"
        - "Development velocity slowed"
    after:
      title: "After Plexicus"
      command: "$ git push origin main"
      autoComment: "# Plexicus automatically:"
      autoActions:
        - "# - Scans code, dependencies, IaC, containers"
        - "# - Correlates findings across tools"
        - "# - Generates fixes via Codex Remedium"
        - "# - Creates single prioritized report"
      resultComment: "# Result: 12 real issues, 8 auto-fixed, 4 with guided fixes"
      resultLabel: "The Result:"
      results:
        - "12 real issues found"
        - "8 auto-fixed by Plexicus"
        - "4 highlighted with clear context"
        - "Developer merges with confidence"

  coreCapabilities:
    title: "Core Capabilities"
    subtitle: "Comprehensive security coverage across your entire application lifecycle"
    capabilities:
      staticAnalysis:
        title: "Static Analysis Engine"
        description: "Detects vulnerabilities in your code before they reach production."
        flowTitle: "Code Analysis Flow"
        steps:
          - "Source Code"
          - "AST Parser"
          - "Rule Engine"
          - "Codex Remedium"
        languagesTitle: "Languages Supported:"
        languages:
          - "Python"
          - "Java"
          - "JavaScript"
          - "Go"
          - "C#"
        vulnerabilitiesTitle: "Vulnerability Types:"
        vulnerabilities:
          - "SQL Injection (CWE-89)"
          - "Cross-Site Scripting (CWE-79)"
          - "Command Injection (CWE-78)"
          - "Path Traversal (CWE-22)"
          - "Insecure Deserialization (CWE-502)"
          - "Hard-coded Credentials (CWE-798)"
      secretsDetection:
        title: "Secrets Detection"
        description: "Prevents credential leaks across your entire codebase and git history."
        codeComment: "# Example: Detected secret patterns"
        detectionMethodsTitle: "Detection Methods:"
        detectionMethods:
          - "Entropy analysis for random tokens"
          - "Pattern matching for known formats"
          - "Historical git commit scanning"
          - "Binary file analysis"
          - "Environment variable inspection"
        stats:
          accuracy: "Detection Accuracy"
          falsePositive: "False Positive Rate"
      dependencyScanning:
        title: "Dependency Scanning (SCA)"
        description: "Tracks vulnerabilities in third-party packages and licenses."
        flowTitle: "Dependency Tree Analysis"
        severityLevels:
          critical: "Critical"
          high: "High"
          medium: "Medium"
      iacSecurity:
        title: "Infrastructure as Code Security"
        description: "Validates cloud configurations before deployment."
        detectedTitle: "Detected Misconfiguration"
        remediationTitle: "Remediation Suggested"
        supportedTitle: "Supported Platforms:"
        platforms:
          - "Terraform"
          - "CloudFormation"
          - "Kubernetes"
          - "Checkov"
          - "Terrascan"
          - "Prisma Cloud"
      apiSecurity:
        title: "API Security Testing"
        description: "Discovers and tests API endpoints for vulnerabilities."
        scanTitle: "API Security Scan"
        discoveryTitle: "OpenAPI Spec"
        discoveryDescription: "Automatically discovers endpoints from OpenAPI/Swagger specifications"
        runtimeTitle: "Runtime Traffic"
        runtimeDescription: "Analyzes live API traffic to discover undocumented endpoints"
        testsTitle: "Security Tests:"
        stats:
          endpointsTested: "Endpoints Tested"
          passedTests: "Passed Tests"
          issuesFound: "Issues Found"

  aiRemediation:
    title: "AI-Powered Remediation"
    subtitle: "Codex Remedium Agent: Your AI security engineer that fixes vulnerabilities automatically"
    workflowTitle: "Codex Remedium Workflow"
    steps:
      vulnerabilityDetected: "Vulnerability Detected"
      contextAnalysis: "Context Analysis"
      fixGeneration: "Fix Generation"
      testingValidation: "Testing & Validation"
    contextItems:
      - "Code structure analysis"
      - "Business logic understanding"
      - "Framework pattern recognition"
    exampleTitle: "Example Fix Generation"
    beforeTitle: "Before (Vulnerable)"
    afterTitle: "After (Codex Remedium)"
    artifactsTitle: "Generated Artifacts:"
    artifacts:
      - "Secure code implementation"
      - "Unit tests for validation"
      - "Documentation updates"
      - "Performance impact analysis"

  integrationEcosystem:
    title: "Integration Ecosystem"
    subtitle: "Seamlessly integrate with your existing security and development tools"
    pipelineTitle: "CI/CD Pipeline Integration"
    codeComment: "# .github/workflows/security.yml"
    categories:
      sastTools:
        title: "SAST Tools"
        tools:
          - "Checkmarx"
          - "Fortify"
          - "SonarQube"
          - "Veracode"
          - "GitHub Advanced Security"
          - "GitLab Security"
      scaTools:
        title: "SCA Tools"
        tools:
          - "Snyk"
          - "Black Duck"
          - "WhiteSource"
          - "GitHub Dependabot"
          - "GitLab Dependency Scanning"
      infrastructure:
        title: "Infrastructure"
        tools:
          - "Terraform"
          - "CloudFormation"
          - "Kubernetes"
          - "Checkov"
          - "Terrascan"
          - "Prisma Cloud"
      cicdPlatforms:
        title: "CI/CD Platforms"
        tools:
          - "GitHub Actions"
          - "GitLab CI"
          - "Jenkins"
          - "Azure DevOps"
          - "CircleCI"
          - "Travis CI"

  devSecOps:
    title: "DevSecOps Integration"
    subtitle: "Security seamlessly integrated into your development workflow"
    pipelineTitle: "DevSecOps Pipeline Flow"
    steps:
      developerCommits:
        title: "Developer Commits"
        description: "Code changes pushed to repository"
      pipelineTrigger:
        title: "Pipeline Trigger"
        description: "Automated CI/CD pipeline starts"
      aspmScan:
        title: "ASPM Scan"
        description: "Comprehensive security analysis"
      autoFix:
        title: "Auto-Fix"
        description: "AI-powered vulnerability remediation"
      productionDeploy:
        title: "Production Deploy"
        description: "Secure deployment to production"
    validationTitle: "Automated Security Validation"
    securityChecks:
      - "No High Severity Issues"
      - "No Exposed Secrets"
      - "Dependencies Validated"
      - "Infrastructure Compliant"
      - "Security Monitoring Active"
    teams:
      developers: "Developers"
      security: "Security"
      operations: "Operations"

  compliance:
    title: "Compliance Automation"
    subtitle: "Automated compliance monitoring and reporting for industry standards"
    frameworks:
      soc2:
        title: "SOC 2 Type II"
        controlsTitle: "Automated Controls:"
        controls:
          - "CC6.1: Logical access controls"
          - "CC6.7: Access reviews and monitoring"
          - "CC7.2: System monitoring"
          - "CC8.1: Change management"
      iso27001:
        title: "ISO 27001:2022"
        controlsTitle: "Automated Controls:"
        controls:
          - "A.8.24: Information deletion"
          - "A.8.28: Secure coding practices"
          - "A.8.29: Security testing"
          - "A.8.31: Development environment separation"
    reportingTitle: "Automated Compliance Reporting"
    reportingSubtitle: "Real-time compliance status and audit-ready documentation"
    metrics:
      complianceScore: "Compliance Score"
      monitoring: "Monitoring"
      evidenceCollection: "Evidence Collection"
      auditReports: "Audit Reports"

  realWorldImpact:
    title: "Real-World Impact"
    subtitle: "Measurable improvements in security posture and developer productivity"
    metrics:
      securityAlerts:
        category: "Security Alerts"
        before:
          value: "847"
          label: "alerts across 6 tools"
        after:
          value: "43"
          label: "prioritized, correlated issues"
        improvement: "95% reduction"
      triageTime:
        category: "Weekly Triage Time"
        before:
          value: "40"
          label: "hours/week triaging findings"
        after:
          value: "4"
          label: "hours/week security work"
        improvement: "90% time saved"
      falsePositiveRate:
        category: "False Positive Rate"
        before:
          value: "23%"
          label: "false positive rate"
        after:
          value: "3%"
          label: "false positive rate"
        improvement: "87% improvement"
      fixTime:
        category: "Average Fix Time"
        before:
          value: "14"
          label: "day average fix time"
        after:
          value: "2"
          label: "day average (80% auto-fixed)"
        improvement: "86% faster"
    beforeLabel: "Before Plexicus"
    afterLabel: "After Plexicus"
    summaryTitle: "Transform Your Security Posture"
    summaryStats:
      fewerAlerts: "Fewer Alerts"
      timeSaved: "Time Saved"
      accuracyImproved: "Accuracy Improved"
      fasterFixes: "Faster Fixes"

  getStarted:
    title: "Get Started"
    subtitle: "Choose your path to implementing Plexicus ASPM in your organization"
    userTypes:
      developers:
        title: "For Developers"
        description: "Scan your local repository for vulnerabilities"
        codeComment: "# Scan your local repository for vulnerabilities"
      devSecOpsTeams:
        title: "For DevSecOps Teams"
        description: "Integrate ASPM into your CI/CD pipeline"
        codeComment: "# Integrate ASPM into your CI/CD pipeline"
      securityArchitects:
        title: "For Security Architects"
        description: "Configure custom security policies and rules"
        codeComment: "# Configure custom security policies and rules"
    terminal: "Terminal"
    ctaTitle: "Ready to Transform Your Application Security?"
    ctaSubtitle: "Join thousands of developers and security teams who trust Plexicus to secure their applications"
    buttons:
      getStarted: "Get Started"
      viewIntegrations: "View Integrations"
      learnMore: "Learn More"


  codeSecurityWorkflow:
    header:
      userLabel: "You"
      analysisDescription: "→ Real-time Code Security Analysis"
      liveScanning: "Live Scanning"
    ide:
      fileExplorerTitle: "Explorer"
    alerts:
      alertTitle: "SQL Injection Detected"
      alertDescription: "Lines 5-7: Unsanitized user input"
      fixNowButton: "Fix Now"
    analysis:
      title: "AI Security Analysis"
      subtitle: "Real-time vulnerability detection and analysis"
      severity:
        critical: "Critical"
        high: "High"
        medium: "Medium"
    findings:
      title: "Security Findings"
      statusLive: "Live"
      statuses:
        detected: "detected"
        fixing: "fixing"
        fixed: "fixed"
      vulnerabilityTypes:
        sqlInjection: "SQL Injection"
        xss: "XSS Vulnerability"
        hardcodedSecret: "Hardcoded Secret"
        insecureDependency: "Insecure Dependency"
      fixAllIssuesButton: "Fix All Issues"
      exportReportButton: "Export Report"
    integrations:
      gitIntegration:
        title: "Git Integration"
        subtitle: "Auto-commit fixes"
      teamSync:
        title: "Team Sync"
        subtitle: "Real-time collaboration"
      teamRoles:
        dev: "Dev"
        sec: "Sec"
        ops: "Ops"
      statusOperational: "All systems operational"
